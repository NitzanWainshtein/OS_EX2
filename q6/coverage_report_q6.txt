=== Q6 Code Coverage Report ===
Generated on: Fri Jun  6 17:07:11 IDT 2025

Lines executed:89.15% of 470
Lines executed:89.15% of 470

Coverage files (.gcov) generated:
persistent_warehouse.c.gcov

=== Uncovered Lines (####) ===
    #####:   84:        return 0;
    #####:  102:            perror("Failed to write initial inventory");
    #####:  103:            close(inventory_fd);
    #####:  104:            return -1;
    #####:  121:            perror("Failed to lock inventory file");
    #####:  122:            close(inventory_fd);
    #####:  123:            return -1;
    #####:  147:            perror("Warning: Failed to unlock inventory file");
    #####:  162:        return;
    #####:  172:        perror("Failed to lock inventory file");
    #####:  173:        return;
    #####:  178:        perror("Failed to seek in inventory file");
    #####:  179:        return;
    #####:  186:        perror("Failed to write inventory");
    #####:  192:        perror("Warning: Failed to unlock inventory file");
    #####:  406:        return;
    #####:  628:            perror("TCP listen");
    #####:  629:            exit(1);
    #####:  645:            perror("UDP bind");
    #####:  646:            exit(1);
    #####:  664:            perror("UDS stream bind");
    #####:  665:            exit(1);
    #####:  668:            perror("UDS stream listen");
    #####:  669:            exit(1);
    #####:  687:            perror("UDS datagram bind");
    #####:  688:            exit(1);
    #####:  708:            printf("Timeout occurred. Server shutting down.\n");
    #####:  709:            break;
    #####:  715:            perror("select");
    #####:  716:            exit(1);
    #####:  721:            alarm(timeout_seconds);
    #####:  733:                            perror("TCP accept");
    #####:  749:                        socklen_t addrlen = sizeof(client_addr);
    #####:  750:                        new_fd = accept(uds_stream_fd, (struct sockaddr*)&client_addr, &addrlen);
    #####:  751:                        if (new_fd == -1) {
    #####:  752:                            perror("UDS stream accept");
    #####:  754:                            FD_SET(new_fd, &master_set);
    #####:  755:                            if (new_fd > fdmax) fdmax = new_fd;
    #####:  756:                            printf("New UDS stream connection on socket %d\n", new_fd);
    #####:  760:                            snprintf(welcome_msg, sizeof(welcome_msg), 
    #####:  763:                            send(new_fd, welcome_msg, strlen(welcome_msg), 0);
    #####:  776:                            perror("UDP recvfrom");
    #####:  777:                            continue;
    #####:  784:                        socklen_t addrlen = sizeof(client_addr);
    #####:  785:                        int nbytes = recvfrom(uds_datagram_fd, buffer, sizeof(buffer) - 1, 0,
    #####:  787:                        if (nbytes < 0) {
    #####:  788:                            perror("UDS datagram recvfrom");
    #####:  789:                            continue;
    #####:  791:                        buffer[nbytes] = '\0';
    #####:  792:                        handle_molecule_request(buffer, uds_datagram_fd, &client_addr, addrlen, 
    #####:  819:                        else perror("recv");
